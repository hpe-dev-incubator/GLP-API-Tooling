{
	"info": {
		"_postman_id": "2be72f9d-9e7d-4833-b489-cc1e38e4d1c0",
		"name": "APIs for common HPE Greenlake platform services",
		"description": "Collection for APIs for common HPE GreenLake platform services with Variables defined at the Collection level.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2747724"
	},
	"item": [
		{
			"name": "Step1-Generate Token",
			"item": [
				{
					"name": "Generate AccessToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody).access_token;\r",
									"pm.collectionVariables.set(\"BearerToken\",jsonData);\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{ClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{sso_URI}}",
							"protocol": "https",
							"host": [
								"{{sso_URI}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate AccessToken With TokenIssuerURL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody).access_token;\r",
									"pm.collectionVariables.set(\"BearerToken\",jsonData);\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{ClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{TokenIssuerURL}}",
							"protocol": "https",
							"host": [
								"{{TokenIssuerURL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get workspace information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces",
								"v1",
								"workspaces",
								":workspaceId"
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "{{WorkspaceId}}",
									"description": "(Required) The unique identifier of the workspace."
								}
							]
						},
						"description": "Retrieve basic workspace information for a provided workspace identifier."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"workspaceName\": \"<string>\",\n  \"generation\": 0,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<email>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Precondition Failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"v1",
										"workspaces",
										":workspaceId"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Configuring and Managing GLP Workspace",
			"item": [
				{
					"name": "Step2-IAM",
					"item": [
						{
							"name": "identity-user-management",
							"item": [
								{
									"name": "v1",
									"item": [
										{
											"name": "users",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Get a user",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "{{InvitedUserId}}"
																		}
																	]
																},
																"description": "Retrieve a single user based on a given user ID."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"username\": \"<email>\",\n  \"generation\": 0,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"userStatus\": \"DELETED\",\n  \"lastLogin\": \"<dateTime>\"\n}"
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update a user",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "{{UserId}}",
																			"description": "(Required) The unique identifier of the user to be updated."
																		}
																	]
																},
																"description": "Update an existing user's contact details and preferences."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"en\",\n  \"idleTimeout\": 1800\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Disassociate a user",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "{{InvitedUserId}}",
																			"description": "(Required) The unique identifier of the user to be deleted."
																		}
																	]
																},
																"description": "Delete a user from a workspace. "
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/identity/v1/users/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"identity",
																				"v1",
																				"users",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get users by Username",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"jsonData2 = jsonData.replace(/-/g,\"\");\r",
																	"pm.collectionVariables.set(\"UserId\",jsonData);\r",
																	"pm.collectionVariables.set(\"UserIdNoDash\",jsonData2);\r",
																	"console.log(jsonData);\r",
																	"console.log(jsonData2)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users?filter=username eq 'example@gmail.com'",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "username eq 'example@gmail.com'",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																}
															]
														},
														"description": "Retrieve users that match given filters. All users are returned when no filters are provided."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"BLOCKED\",\n      \"lastLogin\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"DELETE_IN_PROGRESS\",\n      \"lastLogin\": \"<dateTime>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get Invited users by Username",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"jsonData2 = jsonData.replace(/-/g,\"\");\r",
																	"pm.collectionVariables.set(\"InvitedUserId\",jsonData);\r",
																	"pm.collectionVariables.set(\"InvitedUserIdNoDash\",jsonData2);\r",
																	"console.log(jsonData);\r",
																	"console.log(jsonData2)"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users?filter=username eq 'invitedusername@gmail.com'",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "username eq 'invitedusername@gmail.com'",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																}
															]
														},
														"description": "Retrieve users that match given filters. All users are returned when no filters are provided."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"BLOCKED\",\n      \"lastLogin\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"DELETE_IN_PROGRESS\",\n      \"lastLogin\": \"<dateTime>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get users",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																},
																{
																	"key": "limit",
																	"value": "300",
																	"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																}
															]
														},
														"description": "Retrieve users that match given filters. All users are returned when no filters are provided."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"BLOCKED\",\n      \"lastLogin\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"username\": \"<email>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"userStatus\": \"DELETE_IN_PROGRESS\",\n      \"lastLogin\": \"<dateTime>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nThe Get users API can be filtered by:\n- id\n- username\n- userStatus\n- createdAt\n- updatedAt\n- lastLogin\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Invite a user",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"inviteusername@example.com\",\n  \"sendWelcomeEmail\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity/v1/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"v1",
																"users"
															]
														},
														"description": "Invite a user to a workspace."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "Endpoint to get the invited user resource",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unavailable For Legal Reasons",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"code": 451,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"email\": \"<string>\",\n  \"sendWelcomeEmail\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/v1/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"v1",
																		"users"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "credentials",
							"item": [
								{
									"name": "{credentialId}",
									"item": [
										{
											"name": "Delete a credential",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials",
														":credentialId"
													],
													"variable": [
														{
															"key": "credentialId",
															"value": "<uuid>",
															"description": "(Required) The unique ID of the credential"
														}
													]
												},
												"description": "Delete a credential for a user in a standard enterprise, managed service provider (MSP), or MSP tenant workspace."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Reset a credential",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials",
														":credentialId",
														"reset"
													],
													"variable": [
														{
															"key": "credentialId",
															"value": "<uuid>",
															"description": "(Required) The unique ID of the credential."
														}
													]
												},
												"description": "Reset the client secret for a credential in a standard enterprise, managed service provider (MSP), or MSP tenant workspace."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"credentialName\": \"<string>\",\n  \"clientId\": \"<uuid>\",\n  \"clientSecret\": \"<string>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\",\n    \"tenantName\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/credentials/:credentialId/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"credentials",
																":credentialId",
																"reset"
															],
															"variable": [
																{
																	"key": "credentialId",
																	"value": "<uuid>",
																	"description": "(Required) The unique ID of the credential."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get list of credentials",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												"v1",
												"credentials"
											],
											"query": [
												{
													"key": "filter",
													"value": "",
													"description": "Filter data using a subset of OData 4.0 and return only the subset of resources that match the filter. \n\nGet list of credentials that can be filtered by:\n  - tenantId\n"
												}
											]
										},
										"description": "Retrieve a list of all credentials for a user in a standard enterprise, managed service provider (MSP), or MSP tenant workspace. \n\nNOTE: Use the filter query parameter in an MSP tenant workspace and filter on the `tenantId` property.\n"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"credentialName\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"clientId\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"associatedTenant\": {\n        \"resourceUri\": \"<string>\",\n        \"tenantName\": \"<string>\"\n      },\n      \"associatedServiceManagerProvision\": {\n        \"resourceUri\": \"<string>\"\n      }\n    },\n    {\n      \"credentialName\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"clientId\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"associatedTenant\": {\n        \"resourceUri\": \"<string>\",\n        \"tenantName\": \"<string>\"\n      },\n      \"associatedServiceManagerProvision\": {\n        \"resourceUri\": \"<string>\"\n      }\n    }\n  ],\n  \"count\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials?filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													],
													"query": [
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create a credential",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workspaces/v1/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												"v1",
												"credentials"
											]
										},
										"description": "Create a new credential in a standard enterprise, managed service provider (MSP), or MSP tenant workspace. \n\nNOTE: In an MSP tenant workspace, use the `associatedTenant` property\n"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "<string>",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"credentialName\": \"<string>\",\n  \"clientId\": \"<uuid>\",\n  \"clientSecret\": \"<string>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\",\n    \"tenantName\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"credentialName\": \"<string>\",\n  \"associatedTenant\": {\n    \"resourceUri\": \"<string>\"\n  },\n  \"associatedServiceManagerProvision\": {\n    \"resourceUri\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workspaces/v1/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workspaces",
														"v1",
														"credentials"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "workspaces",
							"item": [
								{
									"name": "v1",
									"item": [
										{
											"name": "workspaces",
											"item": [
												{
													"name": "{workspaceId}",
													"item": [
														{
															"name": "contact",
															"item": [
																{
																	"name": "Get detailed workspace information",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId",
																				"contact"
																			],
																			"variable": [
																				{
																					"key": "workspaceId",
																					"value": "{{WorkspaceId}}",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		},
																		"description": "Retrieve detailed workspace information."
																	},
																	"response": [
																		{
																			"name": "Successful Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"address\": {\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\",\n    \"countryCode\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\"\n}"
																		},
																		{
																			"name": "Unauthorized",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Not Found",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Precondition Failed",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Precondition Failed",
																			"code": 412,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Unprocessable Entity",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Internal Server Error",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId/contact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"workspaces",
																						"v1",
																						"workspaces",
																						":workspaceId",
																						"contact"
																					],
																					"variable": [
																						{
																							"key": "workspaceId"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get workspace information",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"workspaces",
																		":workspaceId"
																	],
																	"variable": [
																		{
																			"key": "workspaceId",
																			"value": "{{WorkspaceId}}",
																			"description": "(Required) The unique identifier of the workspace."
																		}
																	]
																},
																"description": "Retrieve basic workspace information for a provided workspace identifier."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"workspaceName\": \"<string>\",\n  \"generation\": 0,\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"createdBy\": \"<email>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/workspaces/:workspaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"workspaces",
																				":workspaceId"
																			],
																			"variable": [
																				{
																					"key": "workspaceId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "msp-tenants",
											"item": [
												{
													"name": "{tenantId}",
													"item": [
														{
															"name": "Update managed service tenant",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants",
																		":tenantId"
																	],
																	"variable": [
																		{
																			"key": "tenantId",
																			"value": "{{MSP-TenantId}}",
																			"description": "(Required) The unique ID of the tenant."
																		}
																	]
																},
																"description": "Update an existing tenant in the currently logged in managed service provider (MSP) workspace."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Conflict",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unavailable For Legal Reasons",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"code": 451,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"NI\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Delete a managed service tenant",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants",
																		":tenantId"
																	],
																	"variable": [
																		{
																			"key": "tenantId",
																			"value": "{{MSP-TenantId}}",
																			"description": "(Required) The workspace ID for the tenant you want to delete."
																		}
																	]
																},
																"description": "Delete a tenant in the currently logged in managed service provider's (MSP) workspace."
															},
															"response": [
																{
																	"name": "Successful Response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad Request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Conflict",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Precondition Failed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Unprocessable Entity",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Internal Server Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/workspaces/v1/msp-tenants/:tenantId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"workspaces",
																				"v1",
																				"msp-tenants",
																				":tenantId"
																			],
																			"variable": [
																				{
																					"key": "tenantId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get list of MSP Tenants",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?offset=0&limit=300",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"msp-tenants"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "",
																	"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n",
																	"disabled": true
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																},
																{
																	"key": "limit",
																	"value": "300",
																	"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																}
															]
														},
														"description": "Retrieve a list of managed service provider (MSP) tenants."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"workspaceName\": \"<string>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"createdBy\": \"<email>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"workspaceName\": \"<string>\",\n      \"generation\": 0,\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"createdBy\": \"<email>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants?filter=&offset=0&limit=300",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "",
																			"description": "\nFilter data using a subset of OData 4.0 and return only the subset of resources that match the filter.\n\nGet list of MSP Tenants API can be filtered by:\n- id\n- createdAt\n- updatedAt\n- workspaceName\n- createdBy\n"
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Specify pagination offset. An offset argument defines how many pages to skip before returning results."
																		},
																		{
																			"key": "limit",
																			"value": "300",
																			"description": "Specify the maximum number of entries per page. NOTE: The maximum value accepted is 300."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Create MSP customer workspace",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workspaces",
																"v1",
																"msp-tenants"
															]
														},
														"description": "Create an MSP customer workspace."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Precondition Failed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unprocessable Entity",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Unavailable For Legal Reasons",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"code": 451,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"workspaceName\": \"<string>\",\n  \"address\": {\n    \"countryCode\": \"PA\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddressComplement\": \"<string>\",\n    \"city\": \"<string>\",\n    \"stateOrRegion\": \"<string>\",\n    \"zip\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<email>\",\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/workspaces/v1/msp-tenants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"workspaces",
																		"v1",
																		"msp-tenants"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Step3-Locations, Tags",
					"item": [
						{
							"name": "locations/v1/locations",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieve a location",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique indentifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												},
												"description": "Return information for a location specified by a location ID."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique indentifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"addresses\": {\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"postalCode\": \"<string>\",\n    \"state\": \"<string>\",\n    \"streetAddress\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"contacts\": {\n    \"email\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique indentifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique indentifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique indentifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Delete a location",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												},
												"description": "Delete a location by providing a specific location ID."
											},
											"response": [
												{
													"name": "Successfully deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Update a location",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/merge-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier for the location."
														}
													]
												},
												"description": "Update a location's information by specifying its location ID."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"locationId\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      }\n    }\n  ],\n  \"contacts\": [\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier for the location."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tags",
									"item": [
										{
											"name": "Get tags for a workspace",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/tags?offset=<integer>&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"tags"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "(Required) The zero-based resource offset to start the response from."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "(Required) The maximum number of results to be returned."
														}
													]
												},
												"description": "Retrieve tag information for your workspace."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags?offset=<integer>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"createdAt\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"createdAt\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags?offset=<integer>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags?offset=<integer>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags?offset=<integer>&limit=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Create or delete a tag",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/merge-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"createTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"deleteTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"locationId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"tags"
													]
												},
												"description": "Use this API to create or delete a tag. In the request body, provide: <ul><li>The tag name and tag value in the appropriate array to create (`createTags`) or delete (`deleteTags`) tags as needed.</li><li>The location ID.</li></ul> \n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"createTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"deleteTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"locationId\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"createTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"deleteTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"createTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"deleteTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"locationId\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"createTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"deleteTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"locationId\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"createTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"deleteTags\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"locationId\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Retrieves tags for given a location",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												},
												"description": "Return a listing of all tag names and tag values for a given location. If a location has no tags, only the location ID and location name are returned."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"locationId\": \"<uuid>\",\n  \"locationName\": \"<string>\",\n  \"tags\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/locations/v1/locations/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"locations",
																"v1",
																"locations",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all locations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations?offset=<integer>&limit=100&filter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations"
											],
											"query": [
												{
													"key": "offset",
													"value": "<integer>",
													"description": "(Required) The zero-based resource offset to start the response from."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "(Required) The maximum number of results to be returned."
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "Limit the resources operated on by an endpoint or when used with a multiple-GET endpoint, return only the subset of resources that match the filter. The filter grammar is a subset of OData 4.0. <br><br>This API can be filtered by `name`. <br><br>**NOTE:** The filter query parameter must use [URL encoding](https://en.wikipedia.org/wiki/URL_encoding). Most clients do this automatically with inputs provided to them specifically as query parameters. Encoding must be done manually for any query parameters provided as part of the URL. The reserved characters `!` `#` `$` `&` `'` `(` `)` `*` `+` `,` `/` `:` `;` `=` `?` `@` `[` `]` must be encoded with percent encoded equivalents. <br><br>\n"
												}
											]
										},
										"description": "Retrieve location information for all locations."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"expiredAt\": \"<string>\",\n      \"name\": \"<string>\",\n      \"validated\": true,\n      \"validatedAt\": \"<string>\",\n      \"validatedByEmail\": \"<string>\",\n      \"validatedByName\": \"<string>\",\n      \"validationCycle\": \"<string>\",\n      \"validationExpired\": false\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"expiredAt\": \"<string>\",\n      \"name\": \"<string>\",\n      \"validated\": true,\n      \"validatedAt\": \"<string>\",\n      \"validatedByEmail\": \"<string>\",\n      \"validatedByName\": \"<string>\",\n      \"validationCycle\": \"<string>\",\n      \"validationExpired\": false\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations?offset=<integer>&limit=100&filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Create a Location",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations"
											]
										},
										"description": "Create a location and store its associated information."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Create a Test Location",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TestLocation\",\n    \"locationType\": \"building\",\n    \"description\": \"This is a test location\",\n    \"contacts\": [\n        {\n            \"type\": \"primary\",\n            \"name\": \"Givenname Surname\",\n            \"email\": \"example@email.com\",\n            \"phoneNumber\": \"123456789\"\n        }\n    ],\n    \"addresses\": [\n        {\n            \"country\": \"<string>\",\n            \"type\": \"street\",\n            \"streetAddress\": \"test address\",\n            \"streetAddress2\": \"test2\",\n            \"city\": \"<string>\",\n            \"state\": \"<string>\",\n            \"postalCode\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations"
											]
										},
										"description": "Create a location and store its associated information."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"name\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Could not resolve allOf schema\"\n      },\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"streetAddress2\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"locationId\": \"<string>\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1beta1/locations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1beta1",
														"locations"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Manage a location",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/merge-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"addresses\": {\n    \"add\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"update\": [\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      }\n    ]\n  },\n  \"contacts\": {\n    \"add\": [\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"locationDetails\": {\n    \"description\": \"<string>\",\n    \"expiredAt\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"validated\": \"<boolean>\",\n    \"validatedAt\": \"<string>\",\n    \"validatedByEmail\": \"<string>\",\n    \"validatedByName\": \"<string>\",\n    \"validationCycle\": \"<string>\",\n    \"validationExpired\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations/update/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations",
												"update",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
												}
											]
										},
										"description": "Manage the location information for a location specified by its location ID. Provide information in the request body schema to create, update, or delete the location's address, contact, or location details."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": {\n    \"add\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"update\": [\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      }\n    ]\n  },\n  \"contacts\": {\n    \"add\": [\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"locationDetails\": {\n    \"description\": \"<string>\",\n    \"expiredAt\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"validated\": \"<boolean>\",\n    \"validatedAt\": \"<string>\",\n    \"validatedByEmail\": \"<string>\",\n    \"validatedByName\": \"<string>\",\n    \"validationCycle\": \"<string>\",\n    \"validationExpired\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"postalCode\": \"<string>\",\n      \"state\": \"<string>\",\n      \"streetAddress\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"contacts\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"locationType\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expiredAt\": \"<string>\",\n  \"validated\": true,\n  \"validatedAt\": \"<string>\",\n  \"validatedByEmail\": \"<string>\",\n  \"validatedByName\": \"<string>\",\n  \"validationCycle\": \"<string>\",\n  \"validationExpired\": false\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": {\n    \"add\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"update\": [\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      }\n    ]\n  },\n  \"contacts\": {\n    \"add\": [\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"locationDetails\": {\n    \"description\": \"<string>\",\n    \"expiredAt\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"validated\": \"<boolean>\",\n    \"validatedAt\": \"<string>\",\n    \"validatedByEmail\": \"<string>\",\n    \"validatedByName\": \"<string>\",\n    \"validationCycle\": \"<string>\",\n    \"validationExpired\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": {\n    \"add\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"update\": [\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      }\n    ]\n  },\n  \"contacts\": {\n    \"add\": [\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"locationDetails\": {\n    \"description\": \"<string>\",\n    \"expiredAt\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"validated\": \"<boolean>\",\n    \"validatedAt\": \"<string>\",\n    \"validatedByEmail\": \"<string>\",\n    \"validatedByName\": \"<string>\",\n    \"validationCycle\": \"<string>\",\n    \"validationExpired\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"addresses\": {\n    \"add\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        },\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"streetAddress2\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"update\": [\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"locationId\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"state\": \"<string>\",\n        \"streetAddress\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"type\": {\n          \"value\": \"<Error: Could not resolve allOf schema\"\n        }\n      }\n    ]\n  },\n  \"contacts\": {\n    \"add\": [\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"locationId\": \"<string>\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"delete\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"locationDetails\": {\n    \"description\": \"<string>\",\n    \"expiredAt\": \"<string>\",\n    \"locationType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"validated\": \"<boolean>\",\n    \"validatedAt\": \"<string>\",\n    \"validatedByEmail\": \"<string>\",\n    \"validatedByName\": \"<string>\",\n    \"validationCycle\": \"<string>\",\n    \"validationExpired\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/update/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"update",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The unique identifier for the location. For example, `945e70ec-b043-4cad-9ed0-069c06fdb8af`."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Retrieve location from latitude and longitude.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/v1/locations/address/revgeocode?latitude=<string>&longitude=<string>&language=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"v1",
												"locations",
												"address",
												"revgeocode"
											],
											"query": [
												{
													"key": "latitude",
													"value": "<string>",
													"description": "(Required) Provide a latitude coordinate."
												},
												{
													"key": "longitude",
													"value": "<string>",
													"description": "(Required) Provide a longitude coordinate."
												},
												{
													"key": "language",
													"value": "<string>",
													"description": "(Optional) Specify a language code to return the location information in that language. The default is English."
												}
											]
										},
										"description": "Geolocate a location by providing the longitude and latitude. Optionally, provide an ISO language code to return the information in a language different from the default (English)."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/address/revgeocode?latitude=<string>&longitude=<string>&language=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"address",
														"revgeocode"
													],
													"query": [
														{
															"key": "latitude",
															"value": "<string>"
														},
														{
															"key": "longitude",
															"value": "<string>"
														},
														{
															"key": "language",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"expiredAt\": \"<string>\",\n      \"name\": \"<string>\",\n      \"validated\": true,\n      \"validatedAt\": \"<string>\",\n      \"validatedByEmail\": \"<string>\",\n      \"validatedByName\": \"<string>\",\n      \"validationCycle\": \"<string>\",\n      \"validationExpired\": false\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"expiredAt\": \"<string>\",\n      \"name\": \"<string>\",\n      \"validated\": true,\n      \"validatedAt\": \"<string>\",\n      \"validatedByEmail\": \"<string>\",\n      \"validatedByName\": \"<string>\",\n      \"validationCycle\": \"<string>\",\n      \"validationExpired\": false\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/address/revgeocode?latitude=<string>&longitude=<string>&language=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"address",
														"revgeocode"
													],
													"query": [
														{
															"key": "latitude",
															"value": "<string>"
														},
														{
															"key": "longitude",
															"value": "<string>"
														},
														{
															"key": "language",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/address/revgeocode?latitude=<string>&longitude=<string>&language=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"address",
														"revgeocode"
													],
													"query": [
														{
															"key": "latitude",
															"value": "<string>"
														},
														{
															"key": "longitude",
															"value": "<string>"
														},
														{
															"key": "language",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/locations/v1/locations/address/revgeocode?latitude=<string>&longitude=<string>&language=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"locations",
														"v1",
														"locations",
														"address",
														"revgeocode"
													],
													"query": [
														{
															"key": "latitude",
															"value": "<string>"
														},
														{
															"key": "longitude",
															"value": "<string>"
														},
														{
															"key": "language",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "tags/v1",
							"item": [
								{
									"name": "Get tags associated to a workspace",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/v1/tags?limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"v1",
												"tags"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "Filter expressions consisting of simple comparison operations joined\nby logical operators. <br>\n| CLASS      |   EXAMPLES                                         |\n|------------|----------------------------------------------------|\n| Types      | string                                             |\n| Operations | eq, contains()                                     |\n| Logic      | and, or                                            |\n| Properties | `id`, `key`, `value`                               |\n\nThe examples are not an exhaustive list of all possible filtering options.\n",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "A comma separated list of sort expressions. A sort expression is a property name optionally followed by a direction indicator 'asc' or 'desc'. If no direction is provided, ascending order is followed by  default. If no sort expressions are specified for this query parameter, the response will be sorted by the `createdAt` timestamp in descending order. `type` and `resourceCount` are not supported for sorting.",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "A comma separated list of select properties to display in the response. The default is that all properties are returned.",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "A comma separated list of select properties to display in the response. The default is that all properties are returned.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "100",
													"description": "Specifies the number of results to be returned. The default value is 100."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from. The default value is 0."
												}
											]
										},
										"description": "Retrieve a list of tags associated to a workspace. Various query parameters can be passed to filter, limit, or sort the returned tags."
									},
									"response": [
										{
											"name": "Get tags associated to a workspace",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tags?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tags"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"resourceCount\": \"<integer>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<long>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"resourceCount\": \"<integer>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<long>\"\n    }\n  ],\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tags?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tags"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tags?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tags"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "The operation is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tags?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tags"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Too many requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tags?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tags"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tags?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tags"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get all the tagged resources for a workspace",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/v1/tag-resources?filter=resourceType eq 'DEVICE'&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"v1",
												"tag-resources"
											],
											"query": [
												{
													"key": "filter",
													"value": "resourceType eq 'DEVICE'",
													"description": "Filter expressions consisting of simple comparison operations joined\nby logical operators. <br>\n| CLASS      |   EXAMPLES                                         |\n|------------|----------------------------------------------------|\n| Types      | string                                             |\n| Operations | eq                                                 |\n| Logic      | and, or                                            |\n| Properties | `id`, `resourceType`                               |\n\n**NOTE:** Use the `filter-tags` query parameter to filter tags. <br>\n\nThe examples are not an exhaustive list of all possible filtering options.\n"
												},
												{
													"key": "filter-tags",
													"value": "'site' eq 'Mougins'",
													"description": "Filter expressions consisting of simple comparison operations joined by logical operators to be applied on the assigned tags or their values. The comparison operations are case-insensitive. <br>\n| CLASS      |   EXAMPLES                                         |\n|------------|----------------------------------------------------|\n| Types      | string                                             |\n| Operations | eq, ne                                             |\n\n**NOTE:** Logical operators are not supported currently.  <br>\n\nThe examples are not an exhaustive list of all possible filtering on tags options.\n",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "A comma separated list of sort expressions. A sort expression is a property name optionally followed by a direction indicator 'asc' or 'desc'. If no direction is provided, ascending order is followed by default. If no sort expressions are specified for this query parameter, the response will be sorted by the `createdAt` timestamp in descending order. Only `id`, `createdAt`, and `updatedAt` are supported for sorting.",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "A comma separated list of select properties to display in the response. The default is that all properties are returned.",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "A comma separated list of select properties to display in the response. The default is that all properties are returned.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "100",
													"description": "Specifies the number of results to be returned. The default value is 100."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from. The default value is 0."
												}
											]
										},
										"description": "Retrieve all the tagged resources for a workspace. Various query parameters can be passed to filter, limit, or sort the returned tagged resources."
									},
									"response": [
										{
											"name": "Get all the tagged resources for a workspace.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tag-resources?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tag-resources"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "filter-tags",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"type\": \"<string>\",\n      \"resource\": {\n        \"resourceUri\": \"<string>\",\n        \"resourceType\": \"<string>\"\n      },\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<long>\",\n      \"tags\": {\n        \"magna_93c\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"resource\": {\n        \"resourceUri\": \"<string>\",\n        \"resourceType\": \"<string>\"\n      },\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<long>\",\n      \"tags\": {\n        \"anim32d\": \"<string>\"\n      },\n      \"id\": \"<string>\"\n    }\n  ],\n  \"offset\": \"<integer>\",\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tag-resources?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tag-resources"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "filter-tags",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tag-resources?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tag-resources"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "filter-tags",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "The operation is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tag-resources?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tag-resources"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "filter-tags",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Too many requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tag-resources?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tag-resources"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "filter-tags",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/v1beta1/tag-resources?filter=<string>&filter-tags=<string>&sort=<string>&select=<string>&select=<string>&limit=100&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"v1beta1",
														"tag-resources"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "filter-tags",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": 400,\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"recommendedActions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Step4-Service Catalog, Devices and Subscriptions",
					"item": [
						{
							"name": "service-catalog/v1beta1/service-manager",
							"item": [
								{
									"name": "service-managers",
									"item": [
										{
											"name": "Get service managers",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Test in Postman to find service manager keyword (for example \"Aruba Central\") in each \"name\" field of each object\r",
															"// returned in the Response body. If the name field matches the service manager keyword, then save the Id in the \r",
															"// collection variable: Service-Manager-Id.\r",
															"\r",
															"// Create the constant variable responseJson to access the JSON response body and to parse the API response JSON data:\r",
															"const responseJson = pm.response.json();\r",
															"\r",
															"//Retrieve the Collection Variable you defined for the ServiceManagerName (for example: Aruba Central):\r",
															"var SMName = pm.collectionVariables.get(\"ServiceManagerName\");\r",
															"// Display in Test result the name of the Service Manager keyword:\r",
															"pm.test(\"Service Manager Name is: \" + SMName);\r",
															"\r",
															"// Display in Test Results the number of elements (objects) in the JSON response body:\r",
															"pm.test(\"Number of item objects in the array: \" + responseJson.count);\r",
															"// or pm.test(\"Number of objects returned: \" + responseJson.total);\r",
															"\r",
															"// Check if there is an element (Service Manager) with name matching the variable SMName:\r",
															"// The some() method tests whether at least one element in the array satisfies the condition \"name = SMName\"\r",
															"// The arrow function is passed in as an argument to search for the element with name matching 'SMName'.\r",
															"// The some() method returns true if the element is found.\r",
															"const hasServiceManager = responseJson.items.some(x => x.name === SMName);\r",
															"console.log(hasServiceManager);\r",
															"\r",
															"if (hasServiceManager) {\r",
															"\r",
															"    console.log(\"There is a Service Manager with the name: \" + SMName);\r",
															"    // If there is an element that satisfies the condition, then save the ID in the collection variable. \r",
															"    // Set Collection variables using the Find function on the response JSON body \r",
															"    // and pass in the Arrow function expression as an argument to search for the first element \r",
															"    // having the \"name = SMName\". \r",
															"    // The arrow function takes obj as a parameter and returns the element that has name = SMName\r",
															"    // The collection variable Service-Manager-Id is then set with the Id of the element \r",
															"\r",
															"    var result = responseJson.items.find(obj => obj.name === SMName);\r",
															"    console.log(result);\r",
															"    pm.collectionVariables.set(\"Service-Manager-Id\", result.id);\r",
															"    // pm.collectionVariables.set(\"Service-Manager-Id\", (responseJson.items.find(obj => obj.name === SMName).id));\r",
															"    console.log(\"Item matching the keyword \" + SMName + \" has been found : \" + result.name + \" \" + result.description);\r",
															"    console.log(\"Value of Service Manager Id : \" + result.id);\r",
															"    pm.test(\"Value of Service Manager Id : \" + result.id);\r",
															" } \r",
															" else {\r",
															"    console.log(\"No Service Manager with the name: \" + SMName);\r",
															" }\r",
															"\r",
															"console.log(responseJson)\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers?offset=0&limit=2000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-catalog",
														"v1beta1",
														"service-managers"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "Specify pagination offset"
														},
														{
															"key": "limit",
															"value": "2000",
															"description": "The maximum number of records to return."
														}
													]
												},
												"description": "Get a list of available service managers."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceUri\": \"<string>\",\n      \"name\": \"<string>\",\n      \"standaloneSupported\": \"<boolean>\",\n      \"mspSupported\": \"<boolean>\",\n      \"tenantOnlySupported\": \"<boolean>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceUri\": \"<string>\",\n      \"name\": \"<string>\",\n      \"standaloneSupported\": \"<boolean>\",\n      \"mspSupported\": \"<boolean>\",\n      \"tenantOnlySupported\": \"<boolean>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
												},
												{
													"name": "Bad request error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Get a specific service manager",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-catalog",
														"v1beta1",
														"service-managers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{Aruba_Application_Id}}",
															"description": "(Required) Service manager ID"
														}
													]
												},
												"description": "Retrieve details for a specific service manager by passing the service manager ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Service manager ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceUri\": \"<string>\",\n  \"name\": \"<string>\",\n  \"standaloneSupported\": \"<boolean>\",\n  \"mspSupported\": \"<boolean>\",\n  \"tenantOnlySupported\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"generation\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\"\n}"
												},
												{
													"name": "Bad request error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Service manager ID"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Service manager ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Service manager ID"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Not found error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Service manager ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Service manager ID"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "per-region-service-managers",
									"item": [
										{
											"name": "Get service managers by region",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers?offset=0&limit=2000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-catalog",
														"v1beta1",
														"per-region-service-managers"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "Zero-based resource offset to start the response from."
														},
														{
															"key": "limit",
															"value": "2000",
															"description": "The maximum number of records to return."
														},
														{
															"key": "filter",
															"value": "mspSupported eq 'true'",
															"disabled": true
														}
													]
												},
												"description": "Retrieve a list of available service managers categorized by region."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"regionName\": \"<string>\",\n      \"serviceManagers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceUri\": \"<string>\",\n          \"name\": \"<string>\",\n          \"standaloneSupported\": \"<boolean>\",\n          \"mspSupported\": \"<boolean>\",\n          \"tenantOnlySupported\": \"<boolean>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\",\n          \"generation\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceUri\": \"<string>\",\n          \"name\": \"<string>\",\n          \"standaloneSupported\": \"<boolean>\",\n          \"mspSupported\": \"<boolean>\",\n          \"tenantOnlySupported\": \"<boolean>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\",\n          \"generation\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"regionName\": \"<string>\",\n      \"serviceManagers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceUri\": \"<string>\",\n          \"name\": \"<string>\",\n          \"standaloneSupported\": \"<boolean>\",\n          \"mspSupported\": \"<boolean>\",\n          \"tenantOnlySupported\": \"<boolean>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\",\n          \"generation\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceUri\": \"<string>\",\n          \"name\": \"<string>\",\n          \"standaloneSupported\": \"<boolean>\",\n          \"mspSupported\": \"<boolean>\",\n          \"tenantOnlySupported\": \"<boolean>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\",\n          \"generation\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
												},
												{
													"name": "Bad request error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Get service managers deployed in a specific region.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-catalog",
														"v1beta1",
														"per-region-service-managers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{RegionId}}",
															"description": "(Required) HPE GreenLake platform defined region code."
														}
													]
												},
												"description": "Retrieve a list of service managers deployed to a particular region."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) HPE GreenLake platform defined region code."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"regionName\": \"<string>\",\n  \"serviceManagers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceUri\": \"<string>\",\n      \"name\": \"<string>\",\n      \"standaloneSupported\": \"<boolean>\",\n      \"mspSupported\": \"<boolean>\",\n      \"tenantOnlySupported\": \"<boolean>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceUri\": \"<string>\",\n      \"name\": \"<string>\",\n      \"standaloneSupported\": \"<boolean>\",\n      \"mspSupported\": \"<boolean>\",\n      \"tenantOnlySupported\": \"<boolean>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"generation\": \"<integer>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad request error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) HPE GreenLake platform defined region code."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) HPE GreenLake platform defined region code."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) HPE GreenLake platform defined region code."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Not found error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) HPE GreenLake platform defined region code."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/per-region-service-managers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"per-region-service-managers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) HPE GreenLake platform defined region code."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "service-manager-provisions",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Get a specific service manager provision entry",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "{{ServiceManagerProvisionId}}",
																	"description": "(Required) Service manager provision ID"
																}
															]
														},
														"description": "Retrieve details for a specific service manager provision entry using the ID for the entry."
													},
													"response": [
														{
															"name": "Successful Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"resourceUri\": \"<string>\",\n  \"serviceManager\": {\n    \"id\": \"<uuid>\",\n    \"resourceUri\": \"<string>\"\n  },\n  \"region\": \"<string>\",\n  \"provisionStatus\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"type\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Not found error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Delete a service manager provision entry",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Service manager provision ID"
																}
															]
														},
														"description": "Delete a service manager provision entry."
													},
													"response": [
														{
															"name": "Successful response when delete was triggered.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad request error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Not found error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "PreCondition Failed error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-catalog",
																		"v1beta1",
																		"service-manager-provisions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) Service manager provision ID"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Provision a service manager in a given region",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-catalog",
														"v1beta1",
														"service-manager-provisions"
													]
												},
												"description": "Provision a service manager deployed in a region. Provisioning of a service manager is an async process and you can monitor the ` provisionStatus` field to know the current status."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "<url>",
															"description": "(Required) "
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"resourceUri\": \"<string>\",\n  \"serviceManager\": {\n    \"id\": \"<uuid>\",\n    \"resourceUri\": \"<string>\"\n  },\n  \"region\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad request error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Conflict error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serviceManagerId\": \"<uuid>\",\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Get service manager provisions",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).items[2].id;\r",
															"pm.collectionVariables.set(\"ServiceManagerProvisionId\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions?offset=0&limit=2000&filter=status eq 'PROVISIONED'",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-catalog",
														"v1beta1",
														"service-manager-provisions"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "Zero-based resource offset to start the response from."
														},
														{
															"key": "limit",
															"value": "2000",
															"description": "The maximum number of records to return."
														},
														{
															"key": "filter",
															"value": "status eq 'PROVISIONED'"
														}
													]
												},
												"description": "Retrieve a list of all service manager provision entries."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"resourceUri\": \"<string>\",\n      \"serviceManager\": {\n        \"id\": \"<uuid>\",\n        \"resourceUri\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"provisionStatus\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"resourceUri\": \"<string>\",\n      \"serviceManager\": {\n        \"id\": \"<uuid>\",\n        \"resourceUri\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"provisionStatus\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
												},
												{
													"name": "Unauthorized error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-catalog/v1beta1/service-manager-provisions?offset=0&limit=2000",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-catalog",
																"v1beta1",
																"service-manager-provisions"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "2000"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "devices/v1",
							"item": [
								{
									"name": "devices",
									"item": [
										{
											"name": "Get devices managed in a workspace",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).items[0].id;\r",
															"pm.collectionVariables.set(\"DeviceId\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices?filter=serialNumber eq '<SerialNumber>'",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													],
													"query": [
														{
															"key": "filter",
															"value": "serialNumber eq '<SerialNumber>'",
															"description": "Filter expressions consisting of simple comparison operations joined\nby logical operators.<br>\n| CLASS               |   EXAMPLES                                         |\n|---------------------|----------------------------------------------------|\n| Types               | integer, decimal, timestamp, string, boolean, null |\n| Comparison          | eq, ne, gt, ge, lt, le, in                         |\n| Logical Expressions | and, or, not                                       |\nThe following examples are not an exhaustive list of all possible filtering options.\n"
														},
														{
															"key": "filter-tags",
															"value": "<string>",
															"description": "Filter expressions consisting of simple comparison operations joined\nby logical operators to be applied on the assigned tags or their\nvalues.<br>\n| CLASS               |   EXAMPLES      |\n|---------------------|-----------------|\n| Types               | string          |\n| Comparison          | eq, ne, in      |\n| Logical Expressions | and, or, not    |\n",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "A comma separated list of sort expressions. A sort expression is a property name optionally followed by a direction indicator 'asc' or 'desc'. The default is ascending order.",
															"disabled": true
														},
														{
															"key": "select",
															"value": "<string>,<string>",
															"description": "A comma separated list of select properties to display in the response. The default is that all properties are returned.",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "2000",
															"description": "Specifies the number of results to be returned. The default value is 2000.",
															"disabled": true
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Specifies the zero-based resource offset to start the response from. The default value is 0.",
															"disabled": true
														},
														{
															"key": "filter",
															"value": "serialNumber eq 'PHPYKYJ48Z'",
															"description": "Filter expressions consisting of simple comparison operations joined by logical operators.",
															"disabled": true
														}
													]
												},
												"description": "Get a list of devices managed in a workspace. Filters can be passed to filter the  devices based on conditional expressions.<br> You need to have the view  permission for Devices and Subscription Service to invoke this API."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"macAddress\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deviceType\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"model\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"application\": {\n        \"id\": \"<string>\",\n        \"resourceUri\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"tags\": {\n        \"quis_f2e\": \"<string>\",\n        \"idc0\": \"<string>\"\n      },\n      \"subscription\": [\n        {\n          \"id\": \"<string>\",\n          \"resourceUri\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"resourceUri\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"macAddress\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deviceType\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"model\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"application\": {\n        \"id\": \"<string>\",\n        \"resourceUri\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"tags\": {\n        \"in_99d\": \"<string>\",\n        \"non_a\": \"<string>\"\n      },\n      \"subscription\": [\n        {\n          \"id\": \"<string>\",\n          \"resourceUri\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"resourceUri\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "sort",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "select",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "2000"
																},
																{
																	"key": "offset",
																	"value": "0"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Get device information",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{DeviceId}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get details on a specific device by passing its resourceId. <p><b>NOTE</b>: You need  view permissions for device management to invoke this API.</p> Rate limits are enforced on this API. 40 requests per minute is supported per workspace. API will result in `429` if this threshold is breached."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"partNumber\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"type\": \"<string>\",\n  \"macAddress\": \"<string>\",\n  \"deviceType\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"model\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"application\": {\n    \"id\": \"<string>\",\n    \"resourceUri\": \"<string>\"\n  },\n  \"region\": \"<string>\",\n  \"tags\": {\n    \"Ut_fd\": \"<string>\",\n    \"tempor_4__\": \"<string>\"\n  },\n  \"subscription\": [\n    {\n      \"id\": \"<string>\",\n      \"resourceUri\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"resourceUri\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ipsum84\": \"<object>\",\n        \"nostrud_4\": \"<object>\",\n        \"nulla_0\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ullamco__4\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ipsum84\": \"<object>\",\n        \"nostrud_4\": \"<object>\",\n        \"nulla_0\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ullamco__4\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ipsum84\": \"<object>\",\n        \"nostrud_4\": \"<object>\",\n        \"nulla_0\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ullamco__4\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ipsum84\": \"<object>\",\n        \"nostrud_4\": \"<object>\",\n        \"nulla_0\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"ullamco__4\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add devices",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"ipsumcbd\": \"<string>\",\n        \"voluptate_a\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum2\": \"<string>\",\n        \"Ut92a\": \"<string>\",\n        \"voluptate_8\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Loremde4\": \"<string>\",\n        \"mollitd1\": \"<string>\",\n        \"laborum_f90\": \"<string>\",\n        \"sitb\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"proident72\": \"<string>\",\n        \"elit_7c\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"partNumber\": \"<string>\",\n      \"tags\": {\n        \"do_feb\": \"<string>\",\n        \"in__52\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"partNumber\": \"<string>\",\n      \"tags\": {\n        \"et_18c\": \"<string>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													]
												},
												"description": "Add one or more devices to a workspace.<br> You need to have the edit  permission for Devices and Subscription Service to invoke this API.<br><br>  This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device addition task. For details about the  status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Add devices - Aruba Access Point with Tag",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).transactionId;\r",
															"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"compute\": [],\n    \"storage\": [],\n    \"network\": [\n        {\n            \"serialNumber\": \"<SerialNumber of the device>\",\n            \"macAddress\": \"<MAC-address of the device>\",\n             \"tags\": {\n               \"Location\": \"Lab Building 2\"\n             }\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													]
												},
												"description": "Add one or more devices to a workspace.<br> You need to have the edit  permission for Devices and Subscription Service to invoke this API.<br><br>  This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device addition task. For details about the  status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"compute\": [\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"dolore_6_e\": \"<string>\"\n      }\n    },\n    {\n      \"partNumber\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"Excepteur_0\": \"<string>\"\n      }\n    }\n  ],\n  \"network\": [\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"laborum54\": \"<string>\",\n        \"in_6\": \"<string>\"\n      }\n    },\n    {\n      \"macAddress\": \"<string>\",\n      \"serialNumber\": \"<string>\",\n      \"tags\": {\n        \"nisi_c\": \"<string>\",\n        \"veniama9e\": \"<string>\"\n      }\n    }\n  ],\n  \"storage\": [\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"cupidatat_6\": \"<string>\"\n      }\n    },\n    {\n      \"serialNumber\": \"<string>\",\n      \"subscriptionKey\": \"<string>\",\n      \"tags\": {\n        \"ut_b\": \"<string>\",\n        \"quisd5\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update devices",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\",\n  \"tenantPlatformCustomerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices?id=<string>&id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													],
													"query": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Array of device resource IDs. Maximum five devices per request."
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Array of device resource IDs. Maximum five devices per request."
														}
													]
												},
												"description": "Update devices by passing one or more device IDs. Currently supports  assigning and un-assigning devices to and from an application or  applying/removing subscriptions to/from devices.<br> You need to have  the edit permission for Devices and Subscription Service to invoke this API.<br><br>  Only one operation is supported in a single API call. For example,  you cannot assign devices to an application and assign subscriptions to  devices in a single API invocation. You can achieve this with two  API calls.<br> This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device update task. For details  about the status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update devices - Assign Application to a device",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).transactionId;\r",
															"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"application\": {\n    \"id\": \"{{Aruba_Application_Id}}\"\n  },\n  \"region\": \"<region>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices?id={{DeviceId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													],
													"query": [
														{
															"key": "id",
															"value": "{{DeviceId}}",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request."
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request.",
															"disabled": true
														}
													]
												},
												"description": "Update devices by passing one or more device IDs. Currently supports  assigning and un-assigning devices to and from an application or  applying/removing subscriptions to/from devices.<br> You need to have  the edit permission for Devices and Subscription Service to invoke this API.<br><br>  Only one operation is supported in a single API call. For example,  you cannot assign devices to an application and assign subscriptions to  devices in a single API invocation. You can achieve this with two  API calls.<br> This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device update task. For details  about the status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update devices - Unassign Application for a device",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).transactionId;\r",
															"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"application\": {\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices?id={{DeviceId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													],
													"query": [
														{
															"key": "id",
															"value": "{{DeviceId}}",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request."
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request.",
															"disabled": true
														}
													]
												},
												"description": "Update devices by passing one or more device IDs. Currently supports  assigning and un-assigning devices to and from an application or  applying/removing subscriptions to/from devices.<br> You need to have  the edit permission for Devices and Subscription Service to invoke this API.<br><br>  Only one operation is supported in a single API call. For example,  you cannot assign devices to an application and assign subscriptions to  devices in a single API invocation. You can achieve this with two  API calls.<br> This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device update task. For details  about the status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update devices - Unassign Subscription Key for a device",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).transactionId;\r",
															"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscription\": [\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices?id={{DeviceId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													],
													"query": [
														{
															"key": "id",
															"value": "{{DeviceId}}",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request."
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request.",
															"disabled": true
														}
													]
												},
												"description": "Update devices by passing one or more device IDs. Currently supports  assigning and un-assigning devices to and from an application or  applying/removing subscriptions to/from devices.<br> You need to have  the edit permission for Devices and Subscription Service to invoke this API.<br><br>  Only one operation is supported in a single API call. For example,  you cannot assign devices to an application and assign subscriptions to  devices in a single API invocation. You can achieve this with two  API calls.<br> This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device update task. For details  about the status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update devices - Assign Subscription key to a device",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody).transactionId;\r",
															"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
															"console.log(jsonData)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"{{SubscriptionKeyId}}\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/v1/devices?id={{DeviceId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1",
														"devices"
													],
													"query": [
														{
															"key": "id",
															"value": "{{DeviceId}}",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request."
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Array of device resource IDs. Max 5 devices per request.",
															"disabled": true
														}
													]
												},
												"description": "Update devices by passing one or more device IDs. Currently supports  assigning and un-assigning devices to and from an application or  applying/removing subscriptions to/from devices.<br> You need to have  the edit permission for Devices and Subscription Service to invoke this API.<br><br>  Only one operation is supported in a single API call. For example,  you cannot assign devices to an application and assign subscriptions to  devices in a single API invocation. You can achieve this with two  API calls.<br> This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching the progress of the device update task. For details  about the status fetch URL, refer to the API [Get progress or status of async operations in devices](#operation/getDevicesAsyncOperationResource)."
											},
											"response": [
												{
													"name": "Request accepted",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "location",
															"value": "<string>",
															"description": "The URI of the accepted asynchronous operation resource"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Validation error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscription\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ],\n  \"application\": {\n    \"id\": \"<string>\"\n  },\n  \"region\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/v1beta1/devices?id=<string>&id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"v1beta1",
																"devices"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>"
																},
																{
																	"key": "id",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get progress or status of async operations in devices",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/v1/async-operations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												"v1",
												"async-operations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{AsyncOpsTransaction_Id}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Add and update device APIs are asynchronous. Invoke this API to find the  status of add and update operations.<br> You need to have the view permission  for Devices and Subscription Service to invoke this API.<br><br> An asynchronous  resource is generated to track the status of an asynchronous operation.  An asynchronous resource that has reached a terminal state  ('SUCCEEDED', 'FAILED', 'TIMEOUT') will no longer be accessible 24 hours after  reaching the terminal state.<br> An asynchronous resource will also be  set to the 'TIMEOUT' state if the resource is in an 'INITIALIZED' or  'RUNNING' state for a period greater than the timeout set. If an async  operation resource coming from an asynchronous request consists of  multiple devices, a breakdown of succeeded devices and failed devices,  if there are any, will be returned as the response. In this case, the  device serial number identifies each device."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"startedAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"progressPercent\": \"<integer>\",\n  \"suggestedPollingIntervalSeconds\": \"<integer>\",\n  \"timeoutMinutes\": \"<integer>\",\n  \"result\": \"<object>\",\n  \"resultType\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
										},
										{
											"name": "The operation is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
										},
										{
											"name": "Too many requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/v1beta1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"v1beta1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "subscriptions",
							"item": [
								{
									"name": "v1",
									"item": [
										{
											"name": "subscriptions",
											"item": [
												{
													"name": "Add subscriptions",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transactionId;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"ut_50a\": \"<string>\",\n        \"dolor6\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"amet_51\": \"<string>\",\n        \"nostrud_2ea\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"subscriptions"
															]
														},
														"description": "Add one or more subscriptions to a workspace.<br><br> **NOTE:** You need to have the edit  permission for the **Devices and Subscription service** to invoke this API.<br><br>  This API provides an asynchronous response and will always  return `202 Accepted` if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching progress of the subscription addition task. For details about  the status fetch URL, refer to the API [Get progress or status of async operations in subscriptions](#operation/getSubscriptionsAsyncOperationResource).<br><br> Rate limits are enforced on this API. Four requests per minute is supported per workspace, and the API returns a `429` status code if this threshold is breached."
													},
													"response": [
														{
															"name": "Request accepted",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": "The URI of the accepted asynchronous operation resource."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Validation error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Too many requests",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"irureb5\": \"<string>\"\n      }\n    },\n    {\n      \"key\": \"<string>\",\n      \"tags\": {\n        \"dolore2\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Add subscriptions key for AP device",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).transactionId;\r",
																	"pm.collectionVariables.set(\"AsyncOpsTransaction_Id\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<Subscription key>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"subscriptions"
															]
														},
														"description": "Add one or more subscriptions to a workspace.<br> You need to have the edit  permission for Devices and Subscription Service to invoke this API.<br><br>  This API provides an asynchronous response and will always  return \"202 Accepted\" if basic input validations are successful. The  location header in the response provides the URI to be invoked for  fetching progress of the subscription addition task. For details about  the status fetch URL, refer to the API [Get progress or status of async operations in subscriptions](#operation/getSubscriptionsAsyncOperationResource)."
													},
													"response": [
														{
															"name": "Request accepted",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "location",
																	"value": "<string>",
																	"description": "The URI of the accepted asynchronous operation resource"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Validation error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Too many requests",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subscriptions\": [\n    {\n      \"key\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1beta1/subscriptions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1beta1",
																		"subscriptions"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update subscriptions",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/merge-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"subscriptions"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<UUID>",
																	"description": "(Required) Subscription resourceIDs."
																},
																{
																	"key": "id",
																	"value": "<UUID>",
																	"description": "(Required) Subscription resourceIDs."
																}
															]
														},
														"description": "Update subscriptions by passing one or more subscription IDs. Currently, the API supports adding and removing the tags for subscriptions.\nFor each tag provided in the request body:\n\n  - Tags are created and inserted into the specified subscriptions if the provided tags do not map to `null` and are not already present.\n\n  - Tags are updated with the provided if the provided tag key is already present in a subscription, but the provided value differs from the existing value.\n\n  - Tags are removed from subscriptions when a tag key is mapped to a `null` tag value. The tags are removed from any subscription with a matching tag with the same key.\n\nThis API provides an asynchronous response and returns `202 Accepted` if basic input validations are successful. The location header in the response provides the URI used to fetch the progress of the subscription update task. For details about the status fetch URL, see [Get progress or status of async operations in subscriptions](#operation/getSubscriptionsAsyncOperationResource). <br><br> Rate limits are enforced on this API. Five requests per minute are supported per workspace, and the API returns `429` if this threshold is breached. <br><br> **NOTE:** To call this API, you need edit permissions for the **Devices and Subscription service**."
													},
													"response": [
														{
															"name": "Request accepted",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": "The URI of the accepted asynchronous operation resource."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"transactionId\": \"<string>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Validation error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Too many requests",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": {\n    \"veniam8\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"aliquip_47\": {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?id=<UUID>&id=<UUID>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "id",
																			"value": "<UUID>"
																		},
																		{
																			"key": "id",
																			"value": "<UUID>"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Get subscriptions of a workspace",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody).items[0].id;\r",
																	"pm.collectionVariables.set(\"SubscriptionKeyId\",jsonData);\r",
																	"console.log(jsonData)"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/subscriptions?filter=key eq '<SubscriptionKey>'",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"subscriptions"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "key eq '<SubscriptionKey>'",
																	"description": "Filter expressions consisting of simple comparison operations joined \nby logical operators.<br>\n| CLASS                |   EXAMPLES                                         |\n|----------------------|----------------------------------------------------|\n| Types                | integer, decimal, timestamp, string, boolean, null |\n| Comparison           | eq, ne, gt, ge, lt, le, in                         |\n| Logical Expressions  | and, or, not                                       |\nThe following is a non-exhaustive list of possible filtering options.\n"
																},
																{
																	"key": "filter-tag",
																	"value": "<string>",
																	"description": "Filter expressions consisting of simple comparison operations joined\nby logical operators to be applied on the assigned tags or their\nvalues.<br>\n| CLASS               |   EXAMPLES      |\n|---------------------|-----------------|\n| Types               | string          |\n| Comparison          | eq, ne          |\n| Logical Expressions | and, or         |",
																	"disabled": true
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "A comma separated list of sort expressions. A sort expression is a  property name optionally followed by a direction indicator 'asc' or  'desc'. The default is ascending order.",
																	"disabled": true
																},
																{
																	"key": "select",
																	"value": "<string>,<string>",
																	"description": "A comma separated list of select properties to display in the response.  The default is that all properties are returned.",
																	"disabled": true
																},
																{
																	"key": "limit",
																	"value": "2000",
																	"description": "Specifies the number of results to be returned. The default value  is 2000.",
																	"disabled": true
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Specifies the zero-based resource offset to start the response from. The default value is 0.",
																	"disabled": true
																}
															]
														},
														"description": "Get subscriptions managed in a workspace. Filters can be passed to filter  the subscriptions based on conditional expressions.<br> You need to have the  view permission for Devices and Subscription Service to invoke this API."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"quantity\": \"<string>\",\n      \"evaluationType\": \"<string>\",\n      \"productSku\": \"<string>\",\n      \"productDescription\": \"<string>\",\n      \"quote\": \"<string>\",\n      \"po\": \"<string>\",\n      \"contract\": \"<string>\",\n      \"endUserName\": \"<string>\",\n      \"orderClass\": \"<string>\",\n      \"aasType\": \"<string>\",\n      \"appointment\": {\n        \"subscriptionStart\": \"<string>\",\n        \"subscriptionEnd\": \"<string>\",\n        \"delayedActivation\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"quantity\": \"<string>\",\n      \"evaluationType\": \"<string>\",\n      \"productSku\": \"<string>\",\n      \"productDescription\": \"<string>\",\n      \"quote\": \"<string>\",\n      \"po\": \"<string>\",\n      \"contract\": \"<string>\",\n      \"endUserName\": \"<string>\",\n      \"orderClass\": \"<string>\",\n      \"aasType\": \"<string>\",\n      \"appointment\": {\n        \"subscriptionStart\": \"<string>\",\n        \"subscriptionEnd\": \"<string>\",\n        \"delayedActivation\": \"<string>\"\n      }\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Unauthorized request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Validation error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Too many requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1alpha1/subscriptions?filter=<string>&sort=<string>&select=<string>&select=<string>&limit=2000&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1alpha1",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "<string>"
																		},
																		{
																			"key": "sort",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "select",
																			"value": "<string>"
																		},
																		{
																			"key": "limit",
																			"value": "2000"
																		},
																		{
																			"key": "offset",
																			"value": "0"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get information on a subscription",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"subscriptions",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "{{SubscriptionKeyId}}",
																	"description": "(Required) The unique identifier of the subscription."
																}
															]
														},
														"description": "Get detailed information for a single subscription by `id`. <br><br>**NOTE:** You need to have the view permission of device management to invoke this API. <br><br> Rate limits are enforced on this API. 20 requests per minute is supported per workspace. The API returns `429` if this threshold is breached."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"subscriptionType\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"key\": \"<string>\",\n  \"quantity\": \"<string>\",\n  \"availableQuantity\": \"<string>\",\n  \"isEval\": \"<boolean>\",\n  \"sku\": \"<string>\",\n  \"skuDescription\": \"<string>\",\n  \"contract\": \"<string>\",\n  \"startTime\": \"<string>\",\n  \"endTime\": \"<string>\",\n  \"tags\": {\n    \"incididuntb\": \"<string>\",\n    \"velit__\": \"<string>\",\n    \"voluptate_7f\": \"<string>\"\n  },\n  \"productType\": \"<string>\",\n  \"tier\": \"<string>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Validation error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Too many requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/subscriptions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"subscriptions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the subscription."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "auto-subscription-settings",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Get configured auto-subscriptions settings per workspace",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the workspace."
																		}
																	]
																},
																"description": "Retrieve the configured auto-subscriptions settings in a workspace. <br><br> **NOTE:** You need to have view permission for the **Devices and subscription service** to invoke this API. <br><br> Rate limits are enforced on this API. 25 requests per minute is supported per workspace. The API returns `429` if this threshold is breached."
															},
															"response": [
																{
																	"name": "Successful response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"createdAt\": \"<string>\",\n  \"id\": \"<string>\",\n  \"resourceUri\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"name": "Unauthorized request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "The operation is forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Too many requests",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Internal server error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the workspace."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Update the configured auto-subscriptions settings of a workspace",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/merge-patch+json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) The unique identifier of the auto subscription settings."
																		}
																	]
																},
																"description": "Update the configured auto-subscriptions managed in a workspace. <br><br> In the payload, you can pass a list of `deviceType` and `tier` combinations to be updated or created. If the combination of `deviceType` and `tier` is already configured, it is updated. Otherwise, the combination is created. If you need to remove settings for one or more combination of `deviceType` and `tier`, pass `tier` as null for the required `deviceType`. <br><br>**NOTE:** You need to have the edit permission for the **Devices and subscription service** to invoke this API. <br><br> Rate limits are enforced on this API. 25 requests per minute is supported per workspace. The API returns `429` if this threshold is breached."
															},
															"response": [
																{
																	"name": "Successful response",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"createdAt\": \"<string>\",\n  \"id\": \"<string>\",\n  \"resourceUri\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Bad request",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"name": "Unauthorized request",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "The operation is forbidden",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Validation error",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Too many requests",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Internal server error",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"autoSubscriptionSettings\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"tier\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"subscriptions",
																				"v1",
																				"auto-subscription-settings",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) The unique identifier of the auto subscription settings."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get all configured auto-subscriptions settings",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"auto-subscription-settings"
															]
														},
														"description": "Get all configured auto-subscriptions settings in a workspace.  <br><br>**NOTE:** You need to have the view permission for the **Devices and subscription service** to invoke this API. <br><br> Rate limits are enforced on this API. 25 requests per minute is supported per workspace. The API returns `429` if this threshold is breached."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"createdAt\": \"<string>\",\n      \"id\": \"<string>\",\n      \"resourceUri\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"autoSubscriptionSettings\": [\n        {\n          \"deviceType\": \"<string>\",\n          \"tier\": \"<string>\"\n        },\n        {\n          \"deviceType\": \"<string>\",\n          \"tier\": \"<string>\"\n        }\n      ],\n      \"tenantWorkspaceId\": \"<string>\"\n    },\n    {\n      \"createdAt\": \"<string>\",\n      \"id\": \"<string>\",\n      \"resourceUri\": \"<string>\",\n      \"updatedAt\": \"<string>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"autoSubscriptionSettings\": [\n        {\n          \"deviceType\": \"<string>\",\n          \"tier\": \"<string>\"\n        },\n        {\n          \"deviceType\": \"<string>\",\n          \"tier\": \"<string>\"\n        }\n      ],\n      \"tenantWorkspaceId\": \"<string>\"\n    }\n  ],\n  \"offset\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "The operation is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Validation error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Too many requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Internal server error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/subscriptions/v1/auto-subscription-settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"subscriptions",
																		"v1",
																		"auto-subscription-settings"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get progress or status of async operations in subscriptions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscriptions",
														"v1",
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{AsyncOpsTransaction_Id}}",
															"description": "(Required) The unique identifier returned by an asynchronous API operation."
														}
													]
												},
												"description": "Use this API to find the status of the asynchronous Add and update subscriptions API. <br><br> An asynchronous resource is  generated to track the status of an asynchronous operation. An asynchronous  resource that has reached a terminal state (`SUCCEEDED`, `FAILED`, `TIMEOUT`)  will no longer be accessible 24 hours after reaching the terminal state.<br><br> An  asynchronous resource is set to the `TIMEOUT` state if the resource  has been in an `INITIALIZED` or `RUNNING` state for a period greater than the  timeout set. If an asynchronous operation resource coming from an asynchronous  request consists of multiple subscriptions, a breakdown of succeeded  subscriptions and failed subscriptions, if there are any, is returned  as the response. In this case, the subscription key identifies each subscription.<br><br>**Note:** You need view permissions for the Devices and  Subscription service to invoke this API. <br><br> Rate limits are enforced on this API. 30 requests per minute is supported per workspace. The API returns `429` if this threshold is breached."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"startedAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"progressPercent\": \"<integer>\",\n  \"suggestedPollingIntervalSeconds\": \"<integer>\",\n  \"timeoutMinutes\": \"<integer>\",\n  \"result\": \"<object>\",\n  \"resultType\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"badRequestErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "The operation is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Too many requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"generalErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"eu302\": \"<object>\",\n        \"Excepteur_46\": \"<object>\",\n        \"magna12\": \"<object>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": {\n        \"adipisicing7ed\": \"<object>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subscriptions/v1/async-operations/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subscriptions",
																"v1",
																"async-operations",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The unique identifier returned by an asynchronous API operation."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatusCode\": \"<integer>\",\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"serverErrorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Tracking GLP Workspace",
			"item": [
				{
					"name": "Step5-audit-log",
					"item": [
						{
							"name": "audit-log/v1/logs",
							"item": [
								{
									"name": "Get all audit logs of an application or user.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1",
												"logs"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "Use the `select` query parameter to restrict the number of properties included in the audit log response.\nThe supported select parameters:\n * additionalInfo\n * createdAt\n * category\n * hasDetails\n * workspace/workspaceName\n * description\n * user/username\n"
												},
												{
													"key": "all",
													"value": "<string>",
													"description": "Provide a free-text search to perform a comprehensive search across all properties for audit logs."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "How many items to return at one time (max 2000)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from."
												}
											]
										},
										"description": "The audit logs can be filtered using a variety of parameters. Queries should be separated by `and` and can utilize `eq`, `contains`, and `in` operators to construct the final query. Each query should follow the format:\n* key eq 'value' for equality operation.\n* contains(key, 'value') for contains operation.\n* key in ('value1', 'value2') for in operation.\n\nThe supported filter parameters.\n* createdAt\n* category\n* description\n* ipAddress\n* target\n* user/username\n* workspace/workspaceName\n* application/id\n* region\n\nExamples:\n1. Get audit logs starting from 24/07/2023 4:20 AM UTC\n`filter=createdAt ge '2023-07-24T04:21:22.00Z'`\n\n2. Get audit logs with category *User Management* and *User Activity*\n`filter=category in ('User Management', 'User Activity') and workspace/workspaceName eq 'HPE'`\n\n3. Get application specific audit logs\n`filter=region eq 'us-west' and application/id eq '12312-123123-123123-123121'`\n"
									},
									"response": [
										{
											"name": "All audit logs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"remainingRecords\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get all audit logs of an application",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1/logs?filter=application/id eq '{{GLP_Application_Id}}'&filter=createdAt ge '2023-12-14T11:00:00.00000Z'&limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1",
												"logs"
											],
											"query": [
												{
													"key": "filter",
													"value": "application/id eq '{{GLP_Application_Id}}'"
												},
												{
													"key": "filter",
													"value": "createdAt ge '2023-12-14T11:00:00.00000Z'"
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "Use the `select` query parameter to restrict the number of properties included in the audit log response.\nThe supported select parameters:\n * additionalInfo\n * createdAt\n * category\n * hasDetails\n * workspace/workspaceName\n * description\n * user/username\n",
													"disabled": true
												},
												{
													"key": "all",
													"value": "<string>",
													"description": "Provide a free-text search to perform a comprehensive search across all properties for audit logs.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "50",
													"description": "How many items to return at one time (max 2000)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from."
												}
											]
										},
										"description": "The audit logs can be filtered using a variety of parameters. Queries should be separated by `and` and can utilize `eq`, `contains`, and `in` operators to construct the final query. Each query should follow the format:\n* key eq 'value' for equality operation.\n* contains(key, 'value') for contains operation.\n* key in ('value1', 'value2') for in operation.\n\nThe supported filter parameters.\n* createdAt\n* category\n* description\n* ipAddress\n* target\n* user/username\n* workspace/workspaceName\n* application/id\n* region\n\nExamples:\n1. Get audit logs starting from 24/07/2023 4:20 AM UTC\n`filter=createdAt ge '2023-07-24T04:21:22.00Z'`\n\n2. Get audit logs with category *User Management* and *User Activity*\n`filter=category in ('User Management', 'User Activity') and workspace/workspaceName eq 'HPE'`\n\n3. Get application specific audit logs\n`filter=region eq 'us-west' and application/id eq '12312-123123-123123-123121'`\n"
									},
									"response": [
										{
											"name": "All audit logs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"remainingRecords\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get all audit logs of a user",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1/logs?filter=user/username eq 'userEmail@example.com'&filter=createdAt ge '2023-12-14T11:00:00.00000Z'&limit=300",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1",
												"logs"
											],
											"query": [
												{
													"key": "filter",
													"value": "user/username eq 'userEmail@example.com'"
												},
												{
													"key": "filter",
													"value": "createdAt ge '2023-12-14T11:00:00.00000Z'"
												},
												{
													"key": "filter",
													"value": "category in ('User Management', 'User and Customer Account Management')",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "Use the `select` query parameter to restrict the number of properties included in the audit log response.\nThe supported select parameters:\n * additionalInfo\n * createdAt\n * category\n * hasDetails\n * workspace/workspaceName\n * description\n * user/username\n",
													"disabled": true
												},
												{
													"key": "all",
													"value": "<string>",
													"description": "Provide a free-text search to perform a comprehensive search across all properties for audit logs.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "300",
													"description": "How many items to return at one time (max 2000)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Specifies the zero-based resource offset to start the response from.",
													"disabled": true
												}
											]
										},
										"description": "The audit logs can be filtered using a variety of parameters. Queries should be separated by `and` and can utilize `eq`, `contains`, and `in` operators to construct the final query. Each query should follow the format:\n* key eq 'value' for equality operation.\n* contains(key, 'value') for contains operation.\n* key in ('value1', 'value2') for in operation.\n\nThe supported filter parameters.\n* createdAt\n* category\n* description\n* ipAddress\n* target\n* user/username\n* workspace/workspaceName\n* application/id\n* region\n\nExamples:\n1. Get audit logs starting from 24/07/2023 4:20 AM UTC\n`filter=createdAt ge '2023-07-24T04:21:22.00Z'`\n\n2. Get audit logs with category *User Management* and *User Activity*\n`filter=category in ('User Management', 'User Activity') and workspace/workspaceName eq 'HPE'`\n\n3. Get application specific audit logs\n`filter=region eq 'us-west' and application/id eq '12312-123123-123123-123121'`\n"
									},
									"response": [
										{
											"name": "All audit logs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"/audit-log/logs\",\n      \"application\": {\n        \"id\": \"<string>\"\n      },\n      \"region\": \"<string>\",\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"workspace\": {\n        \"id\": \"<string>\",\n        \"workspaceName\": \"<string>\"\n      },\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"generation\": \"<integer>\",\n      \"additionalInfo\": \"<object>\",\n      \"hasDetails\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"remainingRecords\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"hpe.greenlake.bad_request\",\n      \"issues\": [\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"source\": \"<string>\",\n          \"subject\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs?filter=<string>&select=<string>&all=<string>&limit=50&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "all",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "50"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get additional detail of an audit log.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/audit-log/v1/logs/:id/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"audit-log",
												"v1",
												"logs",
												":id",
												"detail"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
												}
											]
										}
									},
									"response": [
										{
											"name": "Audit log details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"/audit-log/logs\",\n  \"header\": \"<string>\",\n  \"body\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Record Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"source\": \"<string>\",\n      \"metadata\": \"<object>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/audit-log/v1beta1/logs/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"audit-log",
														"v1beta1",
														"logs",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Provide the ID of the audit log record to fetch the additional details."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<string>\",\n  \"httpStatusCode\": \"<integer>\",\n  \"errorDetails\": [\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"retryAfterSeconds\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Step6-Wellness",
					"item": [
						{
							"name": "events",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get wellness event with specific ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wellness/v2/events/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2",
														"events",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{WellnessEventId}}",
															"description": "(Required) The wellness event ID."
														}
													]
												},
												"description": "Retrieves a wellness event identified by the given ID."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The wellness event ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"resourceUri\": \"<uri-reference>\",\n  \"title\": \"<string>\",\n  \"description\": {\n    \"mediaType\": \"<string>\",\n    \"content\": \"<string>\"\n  },\n  \"asset\": {\n    \"name\": \"<string>\",\n    \"serialNumber\": \"<string>\"\n  },\n  \"condition\": {\n    \"urn\": \"<string>\",\n    \"severity\": \"<string>\",\n    \"name\": \"<string>\",\n    \"category\": \"<string>\"\n  },\n  \"status\": {\n    \"currentState\": \"<string>\",\n    \"correlatedTo\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"causes\": [\n    {\n      \"title\": \"<string>\",\n      \"description\": {\n        \"mediaType\": \"<string>\",\n        \"content\": \"<string>\"\n      },\n      \"confidence\": \"<integer>\",\n      \"visibility\": \"<string>\",\n      \"recommendation\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"description\": {\n        \"mediaType\": \"<string>\",\n        \"content\": \"<string>\"\n      },\n      \"confidence\": \"<integer>\",\n      \"visibility\": \"<string>\",\n      \"recommendation\": \"<string>\"\n    }\n  ],\n  \"supportCase\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"generation\": \"<integer>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"resourceUri\": \"<uri-reference>\",\n    \"caseNumber\": \"<string>\",\n    \"event\": {\n      \"resourceUri\": \"<uri-reference>\",\n      \"id\": \"<uuid>\"\n    },\n    \"user\": \"<string>\",\n    \"crm\": \"<string>\",\n    \"status\": \"<string>\",\n    \"caseHistory\": [\n      {\n        \"action\": \"<string>\",\n        \"timeStamp\": \"<dateTime>\"\n      },\n      {\n        \"action\": \"<string>\",\n        \"timeStamp\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"correlated\": false,\n  \"serviceName\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"flag\": false,\n  \"read\": false,\n  \"archive\": false,\n  \"supportCaseCreationOpUri\": \"<uri-reference>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The wellness event ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Unauthorized - Invalid JWT token in Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The wellness event ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Bad Request. A wellness event does not exist with the given ID.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The wellness event ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "You have exceeded the allowed rate limit. Contact HPE support if it is an error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The wellness event ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "x-envoy-rate-limited",
															"value": "<boolean>",
															"description": "Rate limit exceeded"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Unexpected Server Error. Retry and contact HPE support if the error is not resolved.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) The wellness event ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Update wellness event with specific ID",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/merge-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/wellness/v2/events/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wellness",
														"v2",
														"events",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "0908777a-788f-45da-afb8-295c626e4d14",
															"description": "(Required) Event ID"
														}
													]
												},
												"description": "Update a wellness event identified by the given ID. Only the attributes `flag`, `read`, and `archive` can be updated."
											},
											"response": [
												{
													"name": "Successfully updated the given wellness event",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  },\n  \"success\": false\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Unauthorized - Invalid JWT token in Request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "A wellness event does not exist with the given ID.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "Invalid request body",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												},
												{
													"name": "You have exceeded the allowed rate limit. Contact HPE support if it is an error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "x-envoy-rate-limited",
															"value": "<boolean>",
															"description": "Rate limit exceeded"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Unexpected Server Error. Retry and contact HPE support if the error is not resolved.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"read\": false,\n  \"flag\": false,\n  \"archive\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/events/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "0908777a-788f-45da-afb8-295c626e4d14",
																	"description": "(Required) Event ID"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get a list of wellness events",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody).items[0].id;\r",
													"pm.collectionVariables.set(\"WellnessEventId\",jsonData);\r",
													"console.log(jsonData)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2/events?limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2",
												"events"
											],
											"query": [
												{
													"key": "filter",
													"value": "serviceName in ('Storage')",
													"description": "The `filter` query parameter is used to filter a set of resources. The returned set of resources matches the criteria in the filter query parameter. The value of the filter query parameter is a subset of [OData V4](https://www.odata.org/documentation/) filter expressions consisting of simple comparison operations joined by logical operators.\n\n__Note:__ You cannot use the `filter` and `text-search` parameters in the same query.\n\n__Note:__ `asset/serialNumber` filter will only return events created after 2024-09-19.",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "productName eq 'HPE Alletra 6000'",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "condition/severity eq 'warning'",
													"disabled": true
												},
												{
													"key": "text-search",
													"value": "<string>",
													"description": "Searches for wellness events that contain the given search string. A search string can include alphanumeric characters, a space character (Unicode `U+0020`) or a hyphen (-). Apart from space characters and hyphens, no other special characters are supported. Including an unsupported character might cause inaccurate results. The minimum length of a search string is 2 characters and maximum is 100 characters. When performing a search, it's important to use specific terms. A generic search term may cause the search to timeout.\n* `title`\n* `condition.category`\n* `condition.name`\n* `condition.severity`\n* `asset.name`\n* `asset.product`\n* `asset.serialNumber`\n* `status.currentStatus`\n* `supportCase.casenumber`\n* `supportCase.casestatus`\n* `serviceName`\n* `productName`\n<br><br>__Note:__ You cannot use the `filter` and `text-search` parameters in the same query.",
													"disabled": true
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "The `select` query parameter is used to limit the properties returned for support cases. The value of the `select` query parameter is a comma separated list of properties. All properties are returned if the select parameter is omitted.<br><br> __Note:__ Only the `total` property is supported.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "100",
													"description": "Specifies the number of resources (wellness events) to fetch."
												},
												{
													"key": "next",
													"value": "<string>",
													"description": "The `next` parameter represents the ID of an event used as a pagination cursor to retrieve the next set of wellness events. The parameter must be a valid UUID and be a part of the response of the previous request.",
													"disabled": true
												}
											]
										},
										"description": "Retrieves a list of wellness events, in descending order of creation time so that the most recent events are listed first.<br><br>\n__Pagination__&mdash; This endpoint exclusively supports cursor-based pagination, using the `next` query parameter.<br><br> __Filtering__&mdash; The following are the supported filter parameters&#58;\n* `condition/severity`\n* `status/currentState`\n* `supportCase/caseNumber`\n* `asset/serialNumber`\n* `productName`\n* `serviceName`\n* `flag`\n* `archive`\n* `read`\n* `createdAt`\n* `updatedAt`"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events?filter=<string>&text-search=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "text-search",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"resourceUri\": \"<uri-reference>\",\n      \"title\": \"<string>\",\n      \"description\": {\n        \"mediaType\": \"<string>\",\n        \"content\": \"<string>\"\n      },\n      \"asset\": {\n        \"name\": \"<string>\",\n        \"serialNumber\": \"<string>\"\n      },\n      \"condition\": {\n        \"urn\": \"<string>\",\n        \"severity\": \"<string>\",\n        \"name\": \"<string>\",\n        \"category\": \"<string>\"\n      },\n      \"status\": {\n        \"currentState\": \"<string>\",\n        \"correlatedTo\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"causes\": [\n        {\n          \"title\": \"<string>\",\n          \"description\": {\n            \"mediaType\": \"<string>\",\n            \"content\": \"<string>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"description\": {\n            \"mediaType\": \"<string>\",\n            \"content\": \"<string>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\"\n        }\n      ],\n      \"supportCase\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"generation\": \"<integer>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"resourceUri\": \"<uri-reference>\",\n        \"caseNumber\": \"<string>\",\n        \"event\": {\n          \"resourceUri\": \"<uri-reference>\",\n          \"id\": \"<uuid>\"\n        },\n        \"user\": \"<string>\",\n        \"crm\": \"<string>\",\n        \"status\": \"<string>\",\n        \"caseHistory\": [\n          {\n            \"action\": \"<string>\",\n            \"timeStamp\": \"<dateTime>\"\n          },\n          {\n            \"action\": \"<string>\",\n            \"timeStamp\": \"<dateTime>\"\n          }\n        ]\n      },\n      \"correlated\": false,\n      \"serviceName\": \"<string>\",\n      \"productName\": \"<string>\",\n      \"flag\": false,\n      \"read\": false,\n      \"archive\": false,\n      \"supportCaseCreationOpUri\": \"<uri-reference>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"resourceUri\": \"<uri-reference>\",\n      \"title\": \"<string>\",\n      \"description\": {\n        \"mediaType\": \"<string>\",\n        \"content\": \"<string>\"\n      },\n      \"asset\": {\n        \"name\": \"<string>\",\n        \"serialNumber\": \"<string>\"\n      },\n      \"condition\": {\n        \"urn\": \"<string>\",\n        \"severity\": \"<string>\",\n        \"name\": \"<string>\",\n        \"category\": \"<string>\"\n      },\n      \"status\": {\n        \"currentState\": \"<string>\",\n        \"correlatedTo\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"causes\": [\n        {\n          \"title\": \"<string>\",\n          \"description\": {\n            \"mediaType\": \"<string>\",\n            \"content\": \"<string>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"description\": {\n            \"mediaType\": \"<string>\",\n            \"content\": \"<string>\"\n          },\n          \"confidence\": \"<integer>\",\n          \"visibility\": \"<string>\",\n          \"recommendation\": \"<string>\"\n        }\n      ],\n      \"supportCase\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"generation\": \"<integer>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\",\n        \"resourceUri\": \"<uri-reference>\",\n        \"caseNumber\": \"<string>\",\n        \"event\": {\n          \"resourceUri\": \"<uri-reference>\",\n          \"id\": \"<uuid>\"\n        },\n        \"user\": \"<string>\",\n        \"crm\": \"<string>\",\n        \"status\": \"<string>\",\n        \"caseHistory\": [\n          {\n            \"action\": \"<string>\",\n            \"timeStamp\": \"<dateTime>\"\n          },\n          {\n            \"action\": \"<string>\",\n            \"timeStamp\": \"<dateTime>\"\n          }\n        ]\n      },\n      \"correlated\": false,\n      \"serviceName\": \"<string>\",\n      \"productName\": \"<string>\",\n      \"flag\": false,\n      \"read\": false,\n      \"archive\": false,\n      \"supportCaseCreationOpUri\": \"<uri-reference>\"\n    }\n  ],\n  \"count\": 100,\n  \"total\": \"<integer>\",\n  \"next\": \"<uuid>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events?filter=<string>&text-search=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "text-search",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized - Invalid JWT token in Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events?filter=<string>&text-search=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "text-search",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Search Timeout - Search too wide causing timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events?filter=<string>&text-search=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "text-search",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "You have exceeded the allowed rate limit. Please contact HPE support if it is an error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events?filter=<string>&text-search=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "text-search",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-envoy-rate-limited",
													"value": "<boolean>",
													"description": "Rate limit exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Unexpected Server Error. Please re-try and contact HPE support if the error is not resolved.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events?filter=<string>&text-search=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "text-search",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "support-cases",
							"item": [
								{
									"name": "Create a support case",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/wellness/v2/support-cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2",
												"support-cases"
											]
										},
										"description": "Create a support case for a wellness event. This is an **asynchronous operation**. Use the `URI` specified in the `Location` response header to retrieve the status of the case creation operation."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "<uri-reference>",
													"description": "URI to get details of the support case creation operation."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized - Invalid JWT token in Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Wellness event doesn't exist with the given ID",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Conflict - Support case creation is already in progress for this event",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "You have exceeded the allowed rate limit. Contact HPE Support if its an error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-envoy-rate-limited",
													"value": "<boolean>",
													"description": "Rate limit exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Unexpected server eror. Retry and contact HPE Support if the error is not resolved.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support-cases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Get a list of support cases",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2/support-cases?filter=<string>&select=<string>&limit=100&next=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2",
												"support-cases"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "The `filter` query parameter is used to filter a set of resources. The returned set of resources matches the criteria in the filter query parameter. The value of the filter query parameter is a subset of [OData V4](https://www.odata.org/documentation/) filter expressions consisting of simple comparison operations joined by logical operators."
												},
												{
													"key": "select",
													"value": "<string>",
													"description": "The `select` query parameter is used to limit the properties returned for support cases. The value of the `select` query parameter is a comma separated list of properties. All properties are returned if the select parameter is omitted.<br><br> __Note:__ Only the `total` property is supported."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "Specifies the number of support cases to be returned."
												},
												{
													"key": "next",
													"value": "<string>",
													"description": "Specifies the event ID, which acts as the pagination cursor for the next page of support cases."
												}
											]
										},
										"description": "Retrieves a list of support cases associated with wellness events. The results are in descending order of creation time, so that the most recent support cases are listed first.<br><br>\n__Pagination__&#58; This endpoint exclusively supports cursor-based pagination, using the `next` query parameter.<br><br> __Filtering__&#58; The following are the supported filter parameters &#58;\n* `event/id` &mdash; The `event/id` filter parameter only supports the `eq` operator and its value should be a valid wellness event ID.\n* `caseNumber`\n* `status`\n* `createdAt`\n* `updatedAt`\n* `event/condition/severity`\n* `event/status/currentState`\n* `event/productName`\n* `event/serviceName`\n* `event/createdAt`\n* `event/updatedAt`"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases?filter=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"resourceUri\": \"<uri-reference>\",\n      \"caseNumber\": \"<string>\",\n      \"event\": {\n        \"resourceUri\": \"<uri-reference>\",\n        \"id\": \"<uuid>\"\n      },\n      \"user\": \"<string>\",\n      \"crm\": \"<string>\",\n      \"status\": \"<string>\",\n      \"caseHistory\": [\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<dateTime>\"\n        },\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<dateTime>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"resourceUri\": \"<uri-reference>\",\n      \"caseNumber\": \"<string>\",\n      \"event\": {\n        \"resourceUri\": \"<uri-reference>\",\n        \"id\": \"<uuid>\"\n      },\n      \"user\": \"<string>\",\n      \"crm\": \"<string>\",\n      \"status\": \"<string>\",\n      \"caseHistory\": [\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<dateTime>\"\n        },\n        {\n          \"action\": \"<string>\",\n          \"timeStamp\": \"<dateTime>\"\n        }\n      ]\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"next\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases?filter=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized - Invalid JWT token in Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases?filter=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "You have exceeded the allowed rate limit, Please contact HPE Support if its an error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases?filter=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-envoy-rate-limited",
													"value": "<boolean>",
													"description": "Rate limit exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Unexpected Server Error. Please re-try and contact HPE support if the error is not resolved.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases?filter=<string>&select=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "select",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Get support case with specific ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2/support-cases/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2",
												"support-cases",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The support case ID."
												}
											]
										},
										"description": "Retrieves a support case identified by the given ID."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The support case ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"resourceUri\": \"<uri-reference>\",\n  \"caseNumber\": \"<string>\",\n  \"event\": {\n    \"resourceUri\": \"<uri-reference>\",\n    \"id\": \"<uuid>\"\n  },\n  \"user\": \"<string>\",\n  \"crm\": \"<string>\",\n  \"status\": \"<string>\",\n  \"caseHistory\": [\n    {\n      \"action\": \"<string>\",\n      \"timeStamp\": \"<dateTime>\"\n    },\n    {\n      \"action\": \"<string>\",\n      \"timeStamp\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The support case ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized - Invalid JWT token in Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The support case ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request, A support case doesn't exist with the given ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The support case ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "You have exceeded the allowed rate limit. Please contact HPE support if it is an error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The support case ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-envoy-rate-limited",
													"value": "<boolean>",
													"description": "Rate limit exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Unexpected Server Error. Please re-try and contact HPE support if the error is not resolved.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support-cases/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support-cases",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The support case ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "async-operations",
							"item": [
								{
									"name": "Get a list of asynchronous operations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2/async-operations?filter=<string>&limit=100&next=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2",
												"async-operations"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "The `filter` query parameter is used to filter a set of resources. The returned set of resources matches the criteria in the filter query parameter. The value of the filter query parameter is a subset of [OData V4](https://www.odata.org/documentation/) filter expressions consisting of simple comparison operations joined by logical operators."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "Specifies the number of asynchronous operations to be returned."
												},
												{
													"key": "next",
													"value": "<string>",
													"description": "Specifies the ID, which acts as the pagination cursor for the next page of asynchronous operations."
												}
											]
										},
										"description": "Retrieves a list of all asynchronous operations organized in descending order based on their creation time. This ensures the most recent asynchronous operations are presented first.<br><br>\n__Pagination__&#58; This endpoint exclusively supports cursor-based pagination.<br><br> __Filtering__&#58; The following are the supported filter parameters&#58;\n* `state`&mdash; The `state` filter parameter only supports the `eq` operator and its value should be a valid string.\n* `createdAt`\n* `updatedAt`\n* `endedAt`\n* `startedAt`"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations?filter=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"startedAt\": \"<dateTime>\",\n      \"endedAt\": \"<dateTime>\",\n      \"sourceResourceUri\": \"<uri-reference>\",\n      \"state\": \"<string>\",\n      \"progressPercent\": \"<integer>\",\n      \"error\": {\n        \"errorCode\": \"<string>\",\n        \"message\": \"<string>\",\n        \"debugId\": \"<uuid>\",\n        \"httpStatusCode\": \"<integer>\"\n      },\n      \"suggestedPollingIntervalSeconds\": \"<integer>\",\n      \"timeoutMinutes\": \"<integer>\",\n      \"results\": [\n        {\n          \"resourceUri\": \"<uri-reference>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"generation\": \"<integer>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"startedAt\": \"<dateTime>\",\n      \"endedAt\": \"<dateTime>\",\n      \"sourceResourceUri\": \"<uri-reference>\",\n      \"state\": \"<string>\",\n      \"progressPercent\": \"<integer>\",\n      \"error\": {\n        \"errorCode\": \"<string>\",\n        \"message\": \"<string>\",\n        \"debugId\": \"<uuid>\",\n        \"httpStatusCode\": \"<integer>\"\n      },\n      \"suggestedPollingIntervalSeconds\": \"<integer>\",\n      \"timeoutMinutes\": \"<integer>\",\n      \"results\": [\n        {\n          \"resourceUri\": \"<uri-reference>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"count\": 100,\n  \"total\": \"<integer>\",\n  \"next\": \"<uuid>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations?filter=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized - Invalid JWT token in Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations?filter=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "You have exceeded the allowed rate limit. Please contact HPE support if it is an error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations?filter=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-envoy-rate-limited",
													"value": "<boolean>",
													"description": "Rate limit exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Unexpected Server Error. Please re-try and contact HPE support if the error is not resolved.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations?filter=<string>&limit=100&next=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "next",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Get asynchronous operation details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wellness/v2/async-operations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wellness",
												"v2",
												"async-operations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
												}
											]
										},
										"description": "Retrieves asynchronous operation details identified with a specific ID."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"generation\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"startedAt\": \"<dateTime>\",\n  \"endedAt\": \"<dateTime>\",\n  \"sourceResourceUri\": \"<uri-reference>\",\n  \"state\": \"<string>\",\n  \"logMessages\": [],\n  \"progressPercent\": \"<integer>\",\n  \"error\": {\n    \"errorCode\": \"<string>\",\n    \"message\": \"<string>\",\n    \"debugId\": \"<uuid>\",\n    \"httpStatusCode\": \"<integer>\"\n  },\n  \"suggestedPollingIntervalSeconds\": \"<integer>\",\n  \"timeoutMinutes\": \"<integer>\",\n  \"results\": [\n    {\n      \"resourceUri\": \"<uri-reference>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized - Invalid JWT token in Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request. An asynchronous operation doesn't exist with the given ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										},
										{
											"name": "You have exceeded the allowed rate limit. Contact HPE support if it is an error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-envoy-rate-limited",
													"value": "<boolean>",
													"description": "Rate limit exceeded"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Unexpected server error. Retry and contact HPE support if the error is not resolved.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/async-operations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"async-operations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) The asynchronous operation `id` returned in an ansychronous API response."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"<string>\",\n  \"message\": \"<string>\",\n  \"debugId\": \"<uuid>\",\n  \"httpStatusCode\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{BearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://global.api.greenlake.hpe.com",
			"type": "string"
		},
		{
			"key": "BearerToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "ClientId",
			"value": "SetYourClientID",
			"type": "string"
		},
		{
			"key": "ClientSecret",
			"value": "SetYourClientSecret",
			"type": "string"
		},
		{
			"key": "sso_URI",
			"value": "sso.common.cloud.hpe.com/as/token.oauth2",
			"type": "string"
		},
		{
			"key": "TokenIssuerURL",
			"value": "SetYourTokenIssuerURL",
			"type": "string"
		},
		{
			"key": "GLP_Application_Id",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "string"
		},
		{
			"key": "WorkspaceId",
			"value": "SetYourWorkspaceID",
			"type": "string"
		},
		{
			"key": "COM_Application_Id",
			"value": "SetYourComputeOpsMgmtAppID",
			"type": "string"
		},
		{
			"key": "Aruba_Application_Id",
			"value": "SetYourArubaCentralAppID",
			"type": "string"
		},
		{
			"key": "DSCC_Application_Id",
			"value": "SetYourDataServicesAppID",
			"type": "string"
		},
		{
			"key": "RegionId",
			"value": "SetYourRegionID (e.g: eu-central)",
			"type": "string"
		},
		{
			"key": "ServiceManagerName",
			"value": "SetYourServiceManagerName (e.g: Aruba Central)",
			"type": "string"
		},
		{
			"key": "DeviceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "UserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "UserIdNoDash",
			"value": "",
			"type": "string"
		},
		{
			"key": "InvitedUserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "InvitedUserIdNoDash",
			"value": "",
			"type": "string"
		},
		{
			"key": "AsyncOpsTransaction_Id",
			"value": "",
			"type": "string"
		},
		{
			"key": "WellnessEventId",
			"value": "",
			"type": "string"
		},
		{
			"key": "SubscriptionKeyId",
			"value": "",
			"type": "string"
		},
		{
			"key": "ServiceManagerProvisionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "MSP-TenantId",
			"value": "",
			"type": "string"
		},
		{
			"key": "Service-Manager-Id",
			"value": "",
			"type": "string"
		}
	]
}